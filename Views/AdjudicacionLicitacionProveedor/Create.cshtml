@model PortalCompras.Models.AdjudicacionLicitacionProveedor

@{
    ViewBag.Title = "Nueva Adjudicación";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Nueva Adjudicación</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <!-- (Opcional) Id Adjudicación -->
        <div class="form-group">
            @Html.LabelFor(model => model.IdAdjudicacion, "Id Adjudicación", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IdAdjudicacion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IdAdjudicacion, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Licitación -->
        <div class="form-group">
            @Html.Label("Licitación", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IdLicitacion", (SelectList)ViewBag.IdLicitacion, "Seleccione una licitación", new { @class = "form-control" })
            </div>
        </div>

        <!-- Cotización (se llena vía AJAX) -->
        <div class="form-group">
            @Html.Label("Cotización", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IdCotizacion", new List<SelectListItem>(), "Seleccione una cotización", new { @class = "form-control" })
            </div>
        </div>

        <!-- Producto: se muestra el nombre en un textbox de solo lectura y se envía el IdProducto en un campo oculto -->
        <div class="form-group">
            @Html.Label("Producto", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox("productoNombre", null, new { @class = "form-control", @readonly = "readonly" })
                @Html.HiddenFor(model => model.IdProducto)
            </div>
        </div>

        <!-- Precio Unitario (solo lectura) -->
        <div class="form-group">
            @Html.Label("Precio Unitario", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox("precioUnitario", null, new { @class = "form-control", @readonly = "readonly" })
            </div>
        </div>

        <!-- Forma de Pago -->
        <div class="form-group">
            @Html.LabelFor(model => model.FormaPagoAdj, "Forma de Pago", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FormaPagoAdj, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FormaPagoAdj, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Botones -->
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" class="btn btn-default" /> |
                @Html.ActionLink("Volver", "Index")
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(document).ready(function () {
            // Al cambiar la licitación, se filtran las cotizaciones
            $('#IdLicitacion').change(function () {
                var idLicitacion = $(this).val();
                if (idLicitacion) {
                    $.getJSON('@Url.Action("GetCotizacionesByLicitacion")', { idLicitacion: idLicitacion }, function (data) {
                        var cotizacionSelect = $('#IdCotizacion');
                        cotizacionSelect.empty();
                        cotizacionSelect.append($('<option>').text("Seleccione una cotización").attr('value', ''));
                        $.each(data, function (i, item) {
                            cotizacionSelect.append($('<option>')
                                .text(item.Nombre)
                                .attr('value', item.Id)
                                // Guardamos datos adicionales para actualizar producto y precio
                                .data('producto', item.Producto)
                                .data('idproducto', item.IdProducto)
                                .data('precio', item.PrecioUnitario));
                        });
                    });
                } else {
                    $('#IdCotizacion').empty();
                }
            });

            // Al seleccionar una cotización, se actualizan el nombre del producto y el precio unitario, y se asigna el IdProducto
            $('#IdCotizacion').change(function () {
                var selectedOption = $(this).find('option:selected');
                var productoNombre = selectedOption.data('producto');
                var idProducto = selectedOption.data('idproducto');
                var precio = selectedOption.data('precio');
                $('#productoNombre').val(productoNombre);
                $('#precioUnitario').val(precio);
                $('#IdProducto').val(idProducto);
            });
        });
    </script>
}
